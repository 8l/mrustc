TODO:
- Fix method selection such that calling `let _: Foo = bar.into();` works
 - A `From<Bar>` impl for `Foo` isn't found, becuase the code that searches for the `Into` impl doesn't know that the param is `Foo`
 - Could have an edge case where a trait is selected if it's the only possibility (there's no other source of that method name)
 - Correct solution would be to hand parameters to the `find_method` function.
- Audit TODOs in codebase
- Method and type monomorphisation
- Test compile against a no_std program
- MIR Optimisations
- HIR Optimisation (remove dead code in `if true/if false` branches)
- Convert enum variants to point to structs for the data type
- Clean up Span code to correctly handle nested spans
- Clean up AST
- Explit arg patterns and arg types up for cleaner serialisation
